<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
      http://www.springframework.org/schema/webflow/spring-webflow-2.4.xsd"
      start-state="identifyCustomer">
    <!--pizza订单的处理流程-->

    <!--定义一个订单变量保存流程数据-->
    <!--这个作用域始终都是flow的-->
    <var name="order" class="com.ternence.web.flow.bean.Order"/>

    <!--调用顾客子流程-->
    <!--suppress WebflowModelInspection 这个是idea的bug，
    人家本来就要通过名字访问，idea却要求带上后缀-->
    <subflow-state id="identifyCustomer" subflow="customer-flow">
        <!--指定order.customer作为子流程的输出，这个对象在子流程中会被填充-->
        <output name="customer" value="order.customer"/>
        <!--指定下一步的转移方向,on表示出发转移的事件,
        如果子流程结束的时候的end-state的id为customerReady,
        那么流程会转移到名为buildOrder的状态-->
        <transition on="customerReady" to="buildOrder"/>
    </subflow-state>


    <!--调用构建订单子流程-->
    <!--suppress WebflowModelInspection -->
    <subflow-state id="buildOrder" subflow="build-order-flow">
        <input name="order" value="order"/>
        <!--指定下一步的转移方向,on表示出发转移的事件-->
        <transition on="orderCreated" to="takePayment"/>
    </subflow-state>

    <!--调用支付子流程-->
    <!--suppress WebflowModelInspection -->
    <subflow-state id="takePayment" subflow="take-payment-flow">
        <input name="order" value="order"/>
        <!--指定下一步的转移方向,on表示出发转移的事件-->
        <transition on="paymentTaken" to="saveOrder"/>
    </subflow-state>

    <!--调用保存订单子流程-->
    <action-state id="saveOrder">
        <!--前三个流程填充order对象,这里调用pizzaFlowActions bean的saveOrder方法保存order对象-->
        <evaluate expression="pizzaFlowActions.saveOrder(order)"/>
        <!--保存订单之后就直接感谢顾客就完成了流程-->
        <transition to="thankCustomer"/>
    </action-state>

    <!--调用感谢顾客视图-->
    <view-state id="thankCustomer" view="../views/thank.jsp">
        <transition on="finished" to="endState"/>
    </view-state>

    <!--结束状态-->
    <end-state id="endState"/>

    <!--全局取消状态转移-->
    <global-transitions>
        <transition on="cancel" to="endState"/>
    </global-transitions>
</flow>