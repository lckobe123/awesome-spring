<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <description>配置spring security的文件</description>

    <security:http pattern="/WEB-RES/css/**" security="none"/>
    <security:http pattern="/WEB-RES/js/**" security="none"/>
    <security:http pattern="/WEB-RES/images/**" security="none"/>
    <security:http pattern="/login.html" security="none"/>
    <security:http pattern="/favicon.ico" security="none"/>


    <!--Web security services are configured using the <http> element.-->
    <!--配置http请求相关的安全参数-->
    <!--responsible crate FilterChainProxy -->
    <security:http use-expressions="true" auto-config="false" entry-point-ref="authenticationEntryPoint"
                   authentication-manager-ref="authenticationManager">
        <!--指定表单登录时候如何重定向-->
        <security:form-login authentication-success-forward-url="/auth/index"
                             authentication-failure-forward-url="/auth/failure"/>
        <!--Which says that we want all URLS in our application to be secured by spring security-->
        <security:intercept-url pattern="/**" access="authenticated"/>
        <!--启用登出功能-->
        <security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/index"/>
        <!--禁用csrf-->
        <security:csrf disabled="true"/>
    </security:http>

    <!--认证管理器,这个对象是必须要配置的，不然启动的时候会报错，找不到authenticationManager-->
    <security:authentication-manager id="authenticationManager">
        <!--responsible create DaoAuthenticationProvider -->
        <security:authentication-provider ref="authenticationProvider"/>
    </security:authentication-manager>

    <!--用于从userDetailsService中获取用户信息-->
    <bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
    </bean>

    <!--指定登录页面-->
    <bean id="authenticationEntryPoint"
          class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="/login.html"/>
    </bean>

    <!--获取用户信息的service-->
    <bean id="userDetailsService" class="com.ternence.security.service.ApplicationUserDetailsService"/>

</beans>